apply plugin: "maven-publish"
apply plugin: "signing"

java {
    withJavadocJar()
    withSourcesJar()
}

project.ext {
    gitUrl = "https://github.com/michaelruocco/verification-context"
    pomConfig = {
        licenses {
            license {
                name "MIT License"
                url "https://opensource.org/licenses/MIT"
                distribution "repo"
            }
        }

        developers {
            developer {
                id "mruoc"
                name "Michael Ruocco"
                email "michael.ruocco@hotmail.com"
            }
        }

        scm {
            url project.ext.gitUrl
        }
    }
}

publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = toRepoUrl(project.version)
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
    publications {
        lib(MavenPublication) {
            from components.java
            suppressPomMetadataWarningsFor("testFixturesApiElements")
            suppressPomMetadataWarningsFor("testFixturesRuntimeElements")
            pom.withXml {
                def root = asNode()
                root.appendNode("description", project.name)
                root.appendNode("name", project.name)
                root.appendNode("url", project.ext.gitUrl)
                root.children().last() + project.ext.pomConfig
            }
        }
    }
}

signing {
    def signingKey = System.getenv("OSSRH_PGP_SECRET_KEY")
    def signingPassword = System.getenv("OSSRH_PGP_SECRET_KEY_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.lib
}
signLibPublication.enabled = gradle.startParameter.taskNames.contains("publish")

def toRepoUrl(version) {
    if (version.endsWith('SNAPSHOT')) {
        return "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    return "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

nexusStaging {
    username = System.getenv("OSSRH_USERNAME")
    password = System.getenv("OSSRH_PASSWORD")
}