plugins {
    id "org.unbroken-dome.test-sets" version "${testSetsPluginVersion}"
    id "com.github.johnrengelman.shadow" version "${shadowPluginVersion}"
    id "maven-publish"
}

apply from: rootProject.file('publish.gradle')

testSets {
    integrationTest
}

configurations {
    testFixturesApi.setCanBeResolved(true)
    testRuntimeOnly.exclude module: "slf4j-simple"
}

ext {
    logbackVersion = "1.2.3"
}

dependencies {
    api project(":context-entities")
    api project(":otp-entities")

    implementation project(":common-use-cases")
    implementation project(":common-json")
    implementation project(":context-json")
    implementation project(":otp-json")
    implementation "com.github.michaelruocco:string-utils:${mruocStringUtilsVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.github.michaelruocco:json-adapter:${jsonAdapterVersion}"

    testImplementation "com.github.stefanbirkner:system-lambda:${systemLambdaVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation project(":context-client-test-fixtures")
    testRuntimeOnly "ch.qos.logback:logback-core:${logbackVersion}"
    testRuntimeOnly "ch.qos.logback:logback-classic:${logbackVersion}"

    integrationTestImplementation "com.github.tomakehurst:wiremock-jre8:2.27.2"
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar {
    dependencies {
        exclude(dependency("javax.money:money-api"))
        exclude(dependency("org.javamoney.moneta:moneta-core"))
        exclude(dependency("org.javamoney.moneta:moneta-convert"))
        exclude(dependency("org.javamoney.moneta:moneta-convert-ecb"))
        exclude(dependency("org.javamoney.moneta:moneta-convert-imf"))
    }
}

publishing {
    publications {
        lib(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId "${project.name}"
            pom.withXml {
                def root = asNode()
                root.appendNode("description", "Verification context client library")
                root.appendNode("name", "${project.name}")
                root.appendNode("url", "https://github.com/michaelruocco/verification-context")
                root.children().last() + project.pomConfig
            }
        }
    }
}